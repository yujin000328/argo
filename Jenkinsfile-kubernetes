 pipeline { 
  agent { 
    kubernetes { 
      yaml ''' 
apiVersion: v1 
kind: Pod 
spec: 
  containers: 
  - name: maven 
    image: maven:3-openjdk-17 
    command: 
    - sleep 
    args: 
59 / 63
Jenkins-practice.md
    - infinity 
  - name: git 
    image: alpine/git 
    command: 
    - sleep 
    args: 
    - infinity 
  - name: kaniko 
    image: gcr.io/kaniko-project/executor:debug 
    command: 
    - sleep 
    args: 
    - infinity 
    volumeMounts: 
    - name: registry-credentials 
      mountPath: /kaniko/.docker 
  volumes: 
  - name: registry-credentials 
    secret: 
      secretName: regcred 
      items: 
      - key: .dockerconfigjson 
        path: config.json 
''' 
    } 
  } 
  stages { 
    stage('Checkout') { 
      steps { 
        container('maven') { 
          git 
branch: 'main', url: '<URL>' 
        } 
      } 
    } 
    stage('Build') { 
      steps { 
        container('maven') { 
          sh 
'mvn clean package -DskipTests=true' 
        } 
      } 
    } 
    stage('Test') { 
      steps { 
        container('maven') { 
          sh 
'mvn test' 
        } 
      } 
    } 
    stage('Build & Tag & Push Docker Image') { 
      steps { 
        container('kaniko') { 
          sh 
2024-08-06
 'executor --dockerfile=Dockerfile -context=dir:///home/jenkins/agent/workspace/kube_pipeline/ --destination=
 httpd:$BUILD_NUMBER --destination=httpd:latest' 
60 / 63
Jenkins-practice.md
      } 
    } 
    stage('Update K8s Manifests & Push') { 
      environment { 
        githubUser = 'yujin000328' //Ryan Jang 
        githubEmail = 'dammoladbwls@gmail.com' //c1t1d0s7@example.com 
        githubId = 'yujin000328' //c1t1d0s7  
        githubRepo = 'argo' //jenkins-kube-deploy 
        githubURL = "https://github.com/${githubId}/${githubRepo}.git" 
        dockerhubId = 'yujin0328' //c1t1d0s7 
        dockerhubRepo = 'hello-world' //hello-world 
      } 
      steps { 
        container('git') { 
          git 
branch: 'main', credentialsId: 'github-credential', url: 
"${githubURL}" 
          sh 
"git config --global --add safe.directory ${workspace}" 
          sh 
          sh 
          sh 
"git config --global user.name ${githubUser}" 
"git config --global user.email ${githubEmail}" 
'sed -i "s/image:.*/image: 
${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml' 
          sh 
'git add deployment.yaml' 
          sh 
'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"' 
          withCredentials([gitUsernamePassword(credentialsId: 'github
credential', gitToolName: 'Default')]) { 
            sh 
'git push --set-upstream origin main' 
          } 
        } 
      } 
    } 
  } 
}